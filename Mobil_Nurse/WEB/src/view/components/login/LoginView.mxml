<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:services="services.*"
		xmlns:vo="model.vo.*"
		xmlns:views="views.*"
		xmlns:components="view.components.*"
		xmlns:auto="model.vo.auto.*"
		initialize="onInitialization(event)"
		title="Welcome - Please Login" xmlns:register="view.components.register.*"
		creationComplete="view1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import model.vo.auto.Employee;
			
			import mx.events.FlexEvent;		
			
			/** PureMVC PART PureMVC Part PureMVC PART **/
			
			public static const NAME:String = 'LoginView';
			public static const CLICKED:String = NAME + "Clicked";
			
			public function onInitialization(event:FlexEvent):void {
				this.id = NAME;
				this.actionBarVisible = false;
			}
			
			public function fireMVCLog():void {
				trace("LoginView() ClickEvent - dispatchEvent : CLICKED - TRYLOGIN");
				dispatchEvent( new Event( CLICKED ) );
			}
			
			/** PureMVC PART PureMVC Part  PureMVC PART **/
			
			protected function login_clickHandler(event:MouseEvent):void
			{
				if(inputValidator(nurseName.text, nursePass.text)){
					fireMVCLog();
				}else{
					setErrorMessage("Fill all fields!");
					errorText.setStyle('color', '#00FF00');
				}
			}
			
			public function inputValidator(name: String, pass: String):Boolean{
				trace("check");
				return(name != null && name.length > 0 && pass != null && pass.length > 0)
			}
						
			public function setErrorMessage(msg:String):void
			{
				errorText.text = msg;
			}

			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				backgroundImage.visible = true;
				this.setElementIndex(back, 0);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
	</fx:Declarations>
	
	<s:states>
		<s:State name="login"/>
		<s:State name="register"/>
	</s:states>
	
		<s:VGroup y="37" horizontalCenter="0" verticalCenter="-30">

				<s:VGroup>
					<s:HGroup>
						<s:filters>
							<s:DropShadowFilter angle="30" strength="0.2" color="#000000"/>
						</s:filters>
						<s:Label id="errorText" text="name" color="#FFFFFF"/>
						<s:BusyIndicator id="busyIndicatorLogin" rotationInterval="50" symbolColor="black"
										 width="21" height="21" visible="false" />
					</s:HGroup>					
					<s:TextInput id="nurseName" left="50%" width="230" color="#000000"  />
					<s:Group>
						<s:filters>
							<s:DropShadowFilter angle="30" strength="0.2" color="#000000"/>
						</s:filters>
						<s:Label text="password" color="#FFFFFF"/>
					</s:Group>
					<s:Group height="40">
						<s:TextInput id="nursePass" width="230" height="35" displayAsPassword="true" color="#000000"/>
					</s:Group>
					
					<s:VGroup width="230">
						<s:Button width="100%" height="34" label="Login"
								  click="login_clickHandler(event)"/>
						<s:Button width="100%" height="34" label="New Account"
								  click="currentState='register'"
								  click.register="currentState='login'"
								  visible="false"/>						
					</s:VGroup>
				</s:VGroup>
		
		</s:VGroup >
		
		<register:RegisterView includeIn="register" verticalCenter="140" horizontalCenter="0"/>		
	
	
	<s:Group id="back">
		<s:BitmapImage id="backgroundImage" visible="false" left="0" right="0" top="0" bottom="0"
					   depth="0" smooth="true" source="@Embed('assets/background.png')"/>
	</s:Group>
	
	<s:VGroup width="1024" x="0" y="60">
		
		<s:Label id="welcome" text="Mobile Nurse" textAlign="center" width="100%" color="#CCCCCC"/>
		<s:Label id="welcome2" x="45" y="139" width="100%" height="58" fontSize="21" color="#FFFFFF"
				 text="Eine Software zur Ersterfassung und Aufnahme von Patientendaten."
				 textAlign="center"/>
	</s:VGroup>
	
</s:View>
