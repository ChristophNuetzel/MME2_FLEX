<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for Spark TextArea component.  

     @see spark.components.TextArea
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
    alpha.disabledStates="0.5" blendMode="normal"
	creationComplete="regHandler(event)">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.TextArea")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script>
        <![CDATA[
			import mx.events.FlexEvent;
        /** 
         * @private 
         */     
        private static const focusExclusions:Array = ["textDisplay"];

        /**
         *  @private
         */
        override public function get focusSkinExclusions():Array { return focusExclusions;};
			
			protected function regHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener(MouseEvent.CLICK , handleMouse );
			//	this.addEventListener(FocusEvent.FOCUS_IN , handleFocusIn );
				this.addEventListener(FocusEvent.FOCUS_OUT , handlerFocusOut );
			}
			
			protected function handleMouse(event:MouseEvent):void
			{
				currentState = 'focused';
			}
			
			protected function handleFocusIn(event:FocusEvent):void
			{
				currentState = 'focused';
				
			}
			
			protected function handlerFocusOut(event:FocusEvent):void
			{
				currentState = "normal";
			}
			
		]]>
    </fx:Script>
    
    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="normalWithPrompt"/>
        <s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
		<s:State name="focused" />
    </s:states>
    
    <!-- border --> 
    <!--- @private -->
    <s:Rect id="border" includeIn="focused" left="0" right="0" top="0" bottom="0">
        <s:stroke>
            <!--- @private -->
            <s:SolidColorStroke id="borderStroke" weight="1" alpha.normal="0.0" />            
        </s:stroke>
    </s:Rect>

    <!-- fill -->
    <!--- Defines the appearance of the TextArea component's background. -->
    <s:Rect id="background" left="1" right="1" top="1" bottom="1">
        <s:fill>
            <!--- @private Defines the background fill color. -->
            <s:SolidColor id="bgFill" color="0xFFFFFF" alpha.normal="0.0" alpha.focused="1.0" />
        </s:fill>
    </s:Rect>
    
    <!-- shadow -->
    <!--- @private -->
    <s:Rect id="shadow" left="1" top="1" right="1" height="1" >
        <s:fill>
            <s:SolidColor color="0xefefef" alpha="0.0" />
        </s:fill>
    </s:Rect>

    <!--- Defines the scroller that is used to scroll the TextArea control. -->
    <s:Scroller id="scroller" left="0" top="0" right="0" bottom="0" minViewportInset="1" measuredSizeIncludesScrollBars="false" hasFocusableChildren="false">
        <!--- @copy spark.components.supportClasses.SkinnableTextBase#textDisplay -->
        <s:RichEditableText id="textDisplay" heightInLines="10" widthInChars="15"
							backgroundColor.focused="#F4F0F0"
							verticalAlign.normal="top"
							verticalAlign.focused="top"
							paddingBottom.normal="10" paddingLeft.normal="10" paddingRight.normal="10" paddingTop.normal="10"
							paddingBottom.focused="10" paddingLeft.focused="10" paddingRight.focused="10" paddingTop.focused="10"
							color="#3399FF"/>
    </s:Scroller>
    
    <!--- Defines the Label that is used for prompt text. The includeInLayout property is false so the prompt text does not affect measurement. -->
    <s:Label id="promptDisplay"
                mouseEnabled="false" mouseChildren="false"
                includeIn="normalWithPrompt,disabledWithPrompt" 
                includeInLayout="false"
                />            

</s:SparkSkin>
